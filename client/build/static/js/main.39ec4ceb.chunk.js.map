{"version":3,"sources":["components/Jumbotron/index.js","components/DeleteBtn/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Items.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","className","DeleteBtn","props","role","tabIndex","axios","get","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","FormBtn","float","marginBottom","Items","useState","items","setItems","formObject","setFormObject","loadItems","API","then","res","data","catch","err","console","log","handleInputChange","event","target","name","value","useEffect","for","onChange","placeholder","disabled","description","onClick","length","item","key","_id","href","Nav","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.39ec4ceb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      âœ—\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import axios from \"axios\";\n\nexport default {\n    getItems: function() {\n        return axios.get(\"/api/items\")\n    },\n    getItem: function(id) {\n        return axios.get(\"/api/items\" + id);\n    },\n    deleteItem: function(id) {\n        return axios.delete(\"/api/items/\" + id);\n    },\n    saveItem: function(itemData) {\n        return axios.post(\"/api/items\" , itemData);\n    }\n    \n}","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { set } from \"mongoose\";\n\nfunction Items() {\n  // Setting our component's initial state\n  const [items, setItems] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all book and store them with setBooks\n  useEffect(() => {\n    loadItems()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadItems() {\n    API.getItems()\n      .then(res => \n        setItems(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n  \n  function handleInputChange (event) {\n    const {name, value} = event.target;\n    setFormObject({...formObject, [name]: value})\n  }\n\n  function formSubmit(event){\n    event.preventDefault();\n    API.saveItem({\n      name: formObject.name,\n      price: formObject.price,\n      description: formObject.description,\n      quantity: formObject.quantity\n    }).then(result => {\n      loadItems();\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Add Product</h1>\n            </Jumbotron>\n            <form >\n              <label for='name of product'/>\n              <Input\n                onChange= {handleInputChange}\n                name=\"name\"\n                placeholder=\"Name (required)\"\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"description\"\n                placeholder=\"Description (required)\"\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"price\"\n                placeholder=\"Price (Optional)\"\n              />\n                <Input\n                onChange={handleInputChange}\n                name=\"quantity\"\n                placeholder=\"Quantity (Optional)\"\n              />\n              <FormBtn\n               disabled={!(formObject.name && formObject.description)}   \n                onClick={() => {}}\n              >\n                Save Item\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Products Available</h1>\n            </Jumbotron>\n            {items.length ? (\n              <List>\n                {items.map(item => {\n                  return (\n                    <ListItem key={item._id}>\n                      <a href={\"/items/\" + item._id}>\n                        <strong>\n                          {item.name} by {item.description}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() =>{}} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Items;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Admin Inventory Control\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Items from \"./pages/Items\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Items />\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}